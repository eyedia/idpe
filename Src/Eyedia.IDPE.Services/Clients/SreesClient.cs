#region Copyright Notice
/* Copyright (c) 2017, Deb'jyoti Das - debjyoti@debjyoti.com
 All rights reserved.
 Redistribution and use in source and binary forms, with or without
 modification, are not permitted.Neither the name of the 
 'Deb'jyoti Das' nor the names of its contributors may be used 
 to endorse or promote products derived from this software without 
 specific prior written permission.
 THIS SOFTWARE IS PROVIDED BY Deb'jyoti Das 'AS IS' AND ANY
 EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 DISCLAIMED. IN NO EVENT SHALL Debjyoti OR Deb'jyoti OR Debojyoti Das OR Eyedia BE LIABLE FOR ANY
 DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#region Developer Information
/*
Author  - Deb'jyoti Das
Created - 3/19/2013 11:14:16 AM
Description  - 
Modified By - 
Description  - 
*/
#endregion Developer Information

#endregion Copyright Notice

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eyedia.IDPE.Clients
{
    using System.Runtime.Serialization;    
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName= "Eyedia.IDPE.Clients.ISreEnvironmentService")]
    public interface ISreEnvironmentService
    {
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/Ping", ReplyAction = "http://tempuri.org/ISreEnvironmentService/PingResponse")]
        string Ping(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/Ping", ReplyAction = "http://tempuri.org/ISreEnvironmentService/PingResponse")]
        System.Threading.Tasks.Task<string> PingAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/GetNumberOfInstances", ReplyAction = "http://tempuri.org/ISreEnvironmentService/GetNumberOfInstancesResponse")]
        int GetNumberOfInstances(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/GetNumberOfInstances", ReplyAction = "http://tempuri.org/ISreEnvironmentService/GetNumberOfInstancesResponse")]
        System.Threading.Tasks.Task<int> GetNumberOfInstancesAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/ExecuteCommand", ReplyAction = "http://tempuri.org/ISreEnvironmentService/ExecuteCommandResponse")]
        string ExecuteCommand(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/ExecuteCommand", ReplyAction = "http://tempuri.org/ISreEnvironmentService/ExecuteCommandResponse")]
        System.Threading.Tasks.Task<string> ExecuteCommandAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISreEnvironmentService/Deploy", ReplyAction="http://tempuri.org/ISreEnvironmentService/DeployResponse")]
        string Deploy(Eyedia.IDPE.Services.EnvironmentServicePacket packet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISreEnvironmentService/Deploy", ReplyAction="http://tempuri.org/ISreEnvironmentService/DeployResponse")]
        System.Threading.Tasks.Task<string> DeployAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet);        
      
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISreEnvironmentService/DeploySdf", ReplyAction="http://tempuri.org/ISreEnvironmentService/DeploySdfResponse")]
        string DeploySdf(Eyedia.IDPE.Services.EnvironmentServicePacket packet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISreEnvironmentService/DeploySdf", ReplyAction="http://tempuri.org/ISreEnvironmentService/DeploySdfResponse")]
        System.Threading.Tasks.Task<string> DeploySdfAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/GetDataSources", ReplyAction = "http://tempuri.org/ISreEnvironmentService/GetDataSourcesResponse")]
        System.Collections.Generic.List<Eyedia.IDPE.DataManager.IdpeDataSource> GetDataSources(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/GetDataSources", ReplyAction = "http://tempuri.org/ISreEnvironmentService/GetDataSourcesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Eyedia.IDPE.DataManager.IdpeDataSource>> GetDataSourcesAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/ProcessFile", ReplyAction = "http://tempuri.org/ISreEnvironmentService/ProcessFileResponse")]
        string ProcessFile(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/ProcessFile", ReplyAction = "http://tempuri.org/ISreEnvironmentService/ProcessFileResponse")]
        System.Threading.Tasks.Task<string> ProcessFileAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/GetConfigFile", ReplyAction = "http://tempuri.org/ISreEnvironmentService/GetConfigFileResponse")]
        Eyedia.IDPE.Common.FileTransferPacket GetConfigFile(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/GetConfigFile", ReplyAction = "http://tempuri.org/ISreEnvironmentService/GetConfigFileResponse")]
        System.Threading.Tasks.Task<Eyedia.IDPE.Common.FileTransferPacket> GetConfigFileAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/SetConfigFile", ReplyAction = "http://tempuri.org/ISreEnvironmentService/SetConfigFileResponse")]
        string SetConfigFile(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/SetConfigFile", ReplyAction = "http://tempuri.org/ISreEnvironmentService/SetConfigFileResponse")]
        System.Threading.Tasks.Task<string> SetConfigFileAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/DeployArtifacts", ReplyAction = "http://tempuri.org/ISreEnvironmentService/DeployArtifactsResponse")]
        string DeployArtifacts(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/DeployArtifacts", ReplyAction = "http://tempuri.org/ISreEnvironmentService/DeployArtifactsResponse")]
        System.Threading.Tasks.Task<string> DeployArtifactsAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/GetLastDeploymentLog", ReplyAction = "http://tempuri.org/ISreEnvironmentService/GetLastDeploymentLogResponse")]
        Eyedia.IDPE.Common.FileTransferPacket GetLastDeploymentLog();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ISreEnvironmentService/GetLastDeploymentLog", ReplyAction = "http://tempuri.org/ISreEnvironmentService/GetLastDeploymentLogResponse")]
        System.Threading.Tasks.Task<Eyedia.IDPE.Common.FileTransferPacket> GetLastDeploymentLogAsync();

    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISreEnvironmentServiceChannel : Eyedia.IDPE.Clients.ISreEnvironmentService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SreEnvironmentServiceClient : System.ServiceModel.ClientBase<Eyedia.IDPE.Clients.ISreEnvironmentService>, Eyedia.IDPE.Clients.ISreEnvironmentService
    {
        
        public SreEnvironmentServiceClient()
        {
        }
        
        public SreEnvironmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public SreEnvironmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public SreEnvironmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public SreEnvironmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }

        public string Ping(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.Ping(packet);
        }

        public System.Threading.Tasks.Task<string> PingAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.PingAsync(packet);
        }

        public int GetNumberOfInstances(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.GetNumberOfInstances(packet);
        }

        public System.Threading.Tasks.Task<int> GetNumberOfInstancesAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.GetNumberOfInstancesAsync(packet);
        }

        public string ExecuteCommand(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.ExecuteCommand(packet);
        }

        public System.Threading.Tasks.Task<string> ExecuteCommandAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.ExecuteCommandAsync(packet);
        }

        public string Deploy(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.Deploy(packet);
        }
        
        public System.Threading.Tasks.Task<string> DeployAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.DeployAsync(packet);
        }        
       
        public string DeploySdf(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.DeploySdf(packet);
        }
        
        public System.Threading.Tasks.Task<string> DeploySdfAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.DeploySdfAsync(packet);
        }

        public System.Collections.Generic.List<Eyedia.IDPE.DataManager.IdpeDataSource> GetDataSources(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.GetDataSources(packet);
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<Eyedia.IDPE.DataManager.IdpeDataSource>> GetDataSourcesAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.GetDataSourcesAsync(packet);
        }

        public string ProcessFile(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.ProcessFile(packet);
        }

        public System.Threading.Tasks.Task<string> ProcessFileAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.ProcessFileAsync(packet);
        }

        public Eyedia.IDPE.Common.FileTransferPacket GetConfigFile(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.GetConfigFile(packet);
        }

        public System.Threading.Tasks.Task<Eyedia.IDPE.Common.FileTransferPacket> GetConfigFileAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.GetConfigFileAsync(packet);
        }

        public string SetConfigFile(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.SetConfigFile(packet);
        }

        public System.Threading.Tasks.Task<string> SetConfigFileAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.DeploySdfAsync(packet);
        }

        public string DeployArtifacts(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.DeployArtifacts(packet);
        }

        public System.Threading.Tasks.Task<string> DeployArtifactsAsync(Eyedia.IDPE.Services.EnvironmentServicePacket packet)
        {
            return base.Channel.DeployArtifactsAsync(packet);
        }

        public Eyedia.IDPE.Common.FileTransferPacket GetLastDeploymentLog()
        {
            return base.Channel.GetLastDeploymentLog();
        }

        public System.Threading.Tasks.Task<Eyedia.IDPE.Common.FileTransferPacket> GetLastDeploymentLogAsync()
        {
            return base.Channel.GetLastDeploymentLogAsync();
        }
    }
}


